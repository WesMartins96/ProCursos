// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProCursos.API;

namespace ProCursos.API.Data.Migrations
{
    [DbContext(typeof(Contexto))]
    partial class ContextoModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.17");

            modelBuilder.Entity("ProCursos.API.Models.Categoria", b =>
                {
                    b.Property<int>("CategoriaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CategoriaNome")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("CategoriaId");

                    b.ToTable("Categorias");

                    b.HasData(
                        new
                        {
                            CategoriaId = 1,
                            CategoriaNome = "Multiplataforma"
                        },
                        new
                        {
                            CategoriaId = 2,
                            CategoriaNome = "Banco de dados"
                        },
                        new
                        {
                            CategoriaId = 3,
                            CategoriaNome = "Metodologia"
                        },
                        new
                        {
                            CategoriaId = 4,
                            CategoriaNome = "Comportamento"
                        },
                        new
                        {
                            CategoriaId = 5,
                            CategoriaNome = "Comunicação"
                        });
                });

            modelBuilder.Entity("ProCursos.API.Models.Curso", b =>
                {
                    b.Property<int>("CursoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CategoriaId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("DescricaoCurso")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DtInicio")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DtTermino")
                        .HasColumnType("TEXT");

                    b.Property<int>("QtdAlunos")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Status")
                        .HasColumnType("INTEGER");

                    b.HasKey("CursoId");

                    b.HasIndex("CategoriaId");

                    b.ToTable("Cursos");
                });

            modelBuilder.Entity("ProCursos.API.Models.Log", b =>
                {
                    b.Property<int>("LogId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CursoId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DtAtualizacao")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DtInclusao")
                        .HasColumnType("TEXT");

                    b.Property<string>("Usuario")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("LogId");

                    b.HasIndex("CursoId");

                    b.ToTable("Logs");
                });

            modelBuilder.Entity("ProCursos.API.Models.Curso", b =>
                {
                    b.HasOne("ProCursos.API.Models.Categoria", "Categoria")
                        .WithMany("Cursos")
                        .HasForeignKey("CategoriaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Categoria");
                });

            modelBuilder.Entity("ProCursos.API.Models.Log", b =>
                {
                    b.HasOne("ProCursos.API.Models.Curso", "Curso")
                        .WithMany("Logs")
                        .HasForeignKey("CursoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Curso");
                });

            modelBuilder.Entity("ProCursos.API.Models.Categoria", b =>
                {
                    b.Navigation("Cursos");
                });

            modelBuilder.Entity("ProCursos.API.Models.Curso", b =>
                {
                    b.Navigation("Logs");
                });
#pragma warning restore 612, 618
        }
    }
}
